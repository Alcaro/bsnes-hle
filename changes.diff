Only in bsneshle094/ananke/obj: .gitignore
Only in bsneshle094/: changes2.diff
Only in bsneshle094/: changes.diff
diff -ru higan_v094-source/emulator/emulator.hpp bsneshle094/emulator/emulator.hpp
--- higan_v094-source/emulator/emulator.hpp	2014-01-20 07:36:22.000000000 +0100
+++ bsneshle094/emulator/emulator.hpp	2014-04-26 16:20:16.498065832 +0200
@@ -143,7 +143,7 @@
 typedef uint30_t uint30;
 typedef uint31_t uint31;
 typedef uint32_t uint32;
-typedef uint_t<33> uint33;
+typedef nall::uint_t<33> uint33;
 typedef uint64_t uint64;
 
 typedef varuint_t<unsigned> varuint;
diff -ru higan_v094-source/emulator/interface.hpp bsneshle094/emulator/interface.hpp
--- higan_v094-source/emulator/interface.hpp	2013-12-23 08:39:57.000000000 +0100
+++ bsneshle094/emulator/interface.hpp	2014-05-03 11:49:42.546554520 +0200
@@ -85,7 +85,7 @@
   virtual bool loaded() { return false; }
   virtual string sha256() { return ""; }
   virtual unsigned group(unsigned id) = 0;
-  virtual void load(unsigned id) {}
+  virtual void load(unsigned id, bool hlechips=false) {}
   virtual void save() {}
   virtual void load(unsigned id, const stream& memory) {}
   virtual void save(unsigned id, const stream& memory) {}
Only in bsneshle094/: .git
Only in bsneshle094/: hashes.bluh
Only in bsneshle094/libco: armeabi.c
diff -ru higan_v094-source/libco/libco.c bsneshle094/libco/libco.c
--- higan_v094-source/libco/libco.c	2014-01-20 07:37:11.000000000 +0100
+++ bsneshle094/libco/libco.c	2014-04-26 16:20:16.498065832 +0200
@@ -10,6 +10,8 @@
   #include "amd64.c"
 #elif defined(__GNUC__) && defined(_ARCH_PPC)
   #include "ppc.c"
+#elif defined(__GNUC__) && (defined(__ARM_EABI__) || defined(__arm__))
+  #include "armeabi.c"
 #elif defined(__GNUC__)
   #include "sjlj.c"
 #elif defined(_MSC_VER) && defined(_M_IX86)
Only in bsneshle094/: LICENSE
diff -ru higan_v094-source/Makefile bsneshle094/Makefile
--- higan_v094-source/Makefile	2013-10-20 14:39:14.000000000 +0200
+++ bsneshle094/Makefile	2014-04-26 16:32:03.214079100 +0200
@@ -13,8 +13,16 @@
 # console := true
 
 # compiler
-flags   += -I. -O3 -fomit-frame-pointer
-link    +=
+
+ifneq ($(debug),)
+  flags := -I. -O0 -g
+else
+  flags := -I. -O3 -fomit-frame-pointer
+endif
+
+cflags := -std=gnu99 -xc
+cppflags := -std=gnu++0x
+
 objects := libco
 
 # profile-guided optimization mode
@@ -27,34 +35,40 @@
 else ifeq ($(pgo),optimize)
   flags += -fprofile-use
 endif
+ 
+ifeq ($(compiler),)
+  compiler := g++
+endif
 
 # platform
-ifeq ($(platform),windows)
-  ifeq ($(arch),x86)
-    flags += -m32
-    link += -m32
-  endif
-  ifeq ($(console),true)
-    link += -mconsole
+ui := target-$(target)
+
+ifeq ($(findstring libretro,$(ui)),)
+  ifeq ($(platform),windows)
+    ifeq ($(arch),x86)
+      flags += -m32
+      link += -m32
+    endif
+    ifeq ($(console),true)
+      link += -mconsole
+    else
+      link += -mwindows
+    endif
+    link += -s -mthreads -luuid -lkernel32 -luser32 -lgdi32 -lcomctl32 -lcomdlg32 -lshell32 -lole32 -lws2_32
+    link += -Wl,-enable-auto-import -Wl,-enable-runtime-pseudo-reloc
+  else ifeq ($(platform),macosx)
+    flags += -march=native
+  else ifeq ($(platform),linux)
+    flags += -march=native
+    link += -s -Wl,-export-dynamic -lX11 -lXext -ldl
+  else ifeq ($(platform),bsd)
+    flags += -march=native
+    link += -s -Wl,-export-dynamic -lX11 -lXext
   else
-    link += -mwindows
+    $(error unsupported platform.)
   endif
-  link += -s -mthreads -luuid -lkernel32 -luser32 -lgdi32 -lcomctl32 -lcomdlg32 -lshell32 -lole32 -lws2_32
-  link += -Wl,-enable-auto-import -Wl,-enable-runtime-pseudo-reloc
-else ifeq ($(platform),macosx)
-  flags += -march=native
-else ifeq ($(platform),linux)
-  flags += -march=native
-  link += -s -Wl,-export-dynamic -lX11 -lXext -ldl
-else ifeq ($(platform),bsd)
-  flags += -march=native
-  link += -s -Wl,-export-dynamic -lX11 -lXext
-else
-  $(error unsupported platform.)
 endif
 
-ui := target-$(target)
-
 # implicit rules
 compile = \
   $(strip \
diff -ru higan_v094-source/nall/file.hpp bsneshle094/nall/file.hpp
--- higan_v094-source/nall/file.hpp	2014-01-20 07:37:12.000000000 +0100
+++ bsneshle094/nall/file.hpp	2014-04-26 17:34:50.338149822 +0200
@@ -9,6 +9,10 @@
 #include <nall/windows/utf8.hpp>
 #include <nall/stream/memory.hpp>
 
+#ifdef __APPLE__
+#include "TargetConditionals.h"
+#endif
+
 namespace nall {
 
 inline FILE* fopen_utf8(const string& filename, const string& mode) {
@@ -232,7 +236,10 @@
   }
 
   static bool exists(const string& filename) {
-    #if !defined(_WIN32)
+    #if defined(__APPLE__) && TARGET_OS_IPHONE
+    struct stat data;
+    if(stat(filename, &data) != 0) return false;
+    #elif !defined(_WIN32)
     struct stat data;
     if(stat(filename, &data) != 0) return false;
     #else
@@ -244,7 +251,10 @@
   }
 
   static uintmax_t size(const string& filename) {
-    #if !defined(_WIN32)
+    #if defined(__APPLE__) && TARGET_OS_IPHONE
+    struct stat data;
+    if(stat(filename, &data) != 0) return false;
+    #elif !defined(_WIN32)
     struct stat data;
     stat(filename, &data);
     #else
@@ -255,7 +265,10 @@
   }
 
   static time_t timestamp(const string& filename, file::time mode = file::time::create) {
-    #if !defined(_WIN32)
+    #if defined(__APPLE__) && TARGET_OS_IPHONE
+    struct stat data;
+    if(stat(filename, &data) != 0) return false;
+    #elif !defined(_WIN32)
     struct stat data;
     stat(filename, &data);
     #else
diff -ru higan_v094-source/nall/intrinsics.hpp bsneshle094/nall/intrinsics.hpp
--- higan_v094-source/nall/intrinsics.hpp	2014-01-20 07:37:12.000000000 +0100
+++ bsneshle094/nall/intrinsics.hpp	2014-04-26 17:39:13.486154763 +0200
@@ -65,7 +65,7 @@
 
 /* Endian detection */
 
-#if (defined(__BYTE_ORDER) && defined(__LITTLE_ENDIAN) && __BYTE_ORDER == __LITTLE_ENDIAN) || defined(__LITTLE_ENDIAN__) || defined(__i386__) || defined(__amd64__) || defined(_M_IX86) || defined(_M_AMD64)
+#if (defined(__BYTE_ORDER) && defined(__LITTLE_ENDIAN) && __BYTE_ORDER == __LITTLE_ENDIAN) || defined(__LITTLE_ENDIAN__) || defined(__ARM_EABI__) || defined(__arm__)
   #define ENDIAN_LSB
   Intrinsics::Endian Intrinsics::endian() { return Intrinsics::Endian::LSB; }
 #elif (defined(__BYTE_ORDER) && defined(__BIG_ENDIAN) && __BYTE_ORDER == __BIG_ENDIAN) || defined(__BIG_ENDIAN__) || defined(__powerpc__) || defined(_M_PPC)
Only in bsneshle094/obj: .gitignore
Only in bsneshle094/out: bsnes_libretro.so
Only in bsneshle094/out: .gitignore
Only in bsneshle094/: README
diff -ru higan_v094-source/sfc/cartridge/cartridge.cpp bsneshle094/sfc/cartridge/cartridge.cpp
--- higan_v094-source/sfc/cartridge/cartridge.cpp	2013-05-05 08:31:39.000000000 +0200
+++ bsneshle094/sfc/cartridge/cartridge.cpp	2014-05-03 11:42:46.802546715 +0200
@@ -27,7 +27,7 @@
   return information.title.cartridge;
 }
 
-void Cartridge::load() {
+void Cartridge::load(bool hlechips) {
   region = Region::NTSC;
 
   has_gb_slot    = false;
@@ -62,7 +62,7 @@
   information.title.sufamiTurboB  = "";
 
   interface->loadRequest(ID::Manifest, "manifest.bml");
-  parse_markup(information.markup.cartridge);
+  parse_markup(information.markup.cartridge, hlechips);
 
   //Super Game Boy
   if(cartridge.has_gb_slot()) {
diff -ru higan_v094-source/sfc/cartridge/cartridge.hpp bsneshle094/sfc/cartridge/cartridge.hpp
--- higan_v094-source/sfc/cartridge/cartridge.hpp	2013-01-22 23:52:43.000000000 +0100
+++ bsneshle094/sfc/cartridge/cartridge.hpp	2014-05-03 11:39:39.190543193 +0200
@@ -39,6 +39,12 @@
   readonly<bool> has_obc1;
   readonly<bool> has_hsu1;
   readonly<bool> has_msu1;
+  readonly<bool> has_dsp1;
+  readonly<bool> has_dsp2;
+  readonly<bool> has_dsp3;
+  readonly<bool> has_dsp4;
+  readonly<bool> has_cx4;
+  readonly<bool> has_st0010;
 
   struct Mapping {
     function<uint8 (unsigned)> reader;
@@ -80,7 +86,7 @@
 
   string title();
 
-  void load();
+  void load(bool);
   void unload();
 
   void serialize(serializer&);
@@ -93,7 +99,7 @@
   void load_sufami_turbo_a();
   void load_sufami_turbo_b();
 
-  void parse_markup(const char*);
+  void parse_markup(const char*, bool);
   void parse_markup_map(Mapping&, Markup::Node);
   void parse_markup_memory(MappedRAM&, Markup::Node, unsigned id, bool writable);
 
@@ -116,6 +122,9 @@
   void parse_markup_obc1(Markup::Node);
   void parse_markup_hsu1(Markup::Node);
   void parse_markup_msu1(Markup::Node);
+  
+  void parse_markup_hitachidsp_hle(Markup::Node);
+  void parse_markup_necdsp_hle(Markup::Node);
 
   friend class Interface;
 };
diff -ru higan_v094-source/sfc/cartridge/markup.cpp bsneshle094/sfc/cartridge/markup.cpp
--- higan_v094-source/sfc/cartridge/markup.cpp	2013-12-06 21:58:46.000000000 +0100
+++ bsneshle094/sfc/cartridge/markup.cpp	2014-05-03 15:26:59.494799270 +0200
@@ -1,6 +1,7 @@
 #ifdef CARTRIDGE_CPP
 
-void Cartridge::parse_markup(const char* markup) {
+void Cartridge::parse_markup(const char* markup, bool hlechips) {
+hlechips=true;
   auto document = Markup::Document(markup);
   information.title.cartridge = document["information/title"].text();
 
@@ -19,8 +20,16 @@
   parse_markup_sa1(cartridge["sa1"]);
   parse_markup_superfx(cartridge["superfx"]);
   parse_markup_armdsp(cartridge["armdsp"]);
-  parse_markup_hitachidsp(cartridge["hitachidsp"], cartridge["board/type"].data.match("2DC*") ? 2 : 1);
-  parse_markup_necdsp(cartridge["necdsp"]);
+  if (!hlechips)
+  {
+    parse_markup_hitachidsp(cartridge["hitachidsp"], cartridge["board/type"].data.match("2DC*") ? 2 : 1);
+    parse_markup_necdsp(cartridge["necdsp"]);
+  }
+  else
+  {
+    parse_markup_hitachidsp_hle(cartridge["hitachidsp"]);
+    parse_markup_necdsp_hle(cartridge["necdsp"]);
+  }
   parse_markup_epsonrtc(cartridge["epsonrtc"]);
   parse_markup_sharprtc(cartridge["sharprtc"]);
   parse_markup_spc7110(cartridge["spc7110"]);
@@ -583,6 +592,71 @@
       parse_markup_map(m, node);
       mapping.append(m);
     }
+  }
+}
+
+void Cartridge::parse_markup_hitachidsp_hle(Markup::Node root) {
+  if(root.exists() == false) return;
+
+  parse_markup_cartridge(root);
+
+  has_cx4 = true;
+  for(auto& node : root) {
+    if(node.name != "map" || node["id"].data != "io") continue;
+    Mapping m({&Cx4::read, &cx4}, {&Cx4::write, &cx4});
+    parse_markup_map(m, node);
+    mapping.append(m);
+  }
+}
+
+void Cartridge::parse_markup_necdsp_hle(Markup::Node root) {
+  if(root.exists() == false) return;
+
+  if (root["model"].data == "uPD7725") {
+    Mapping m;
+    unsigned int select=0;
+    unsigned int * selectaddr=NULL;
+    for(auto& node : root) {
+      if (node.name == "rom" && node["id"].data == "program") {
+        if (node["name"].data == "dsp1.program.rom" || node["name"].data == "dsp1b.program.rom") {
+          has_dsp1 = true;
+          m.reader = {&DSP1::read, &dsp1};
+          m.writer = {&DSP1::write, &dsp1};
+          selectaddr = &dsp1.Select;
+        }
+        if (node["name"].data == "dsp2.program.rom") {
+          has_dsp2 = true;
+          m.reader = {&DSP2::read, &dsp2};
+          m.writer = {&DSP2::write, &dsp2};
+          selectaddr = &dsp2.Select;
+        }
+        if (node["name"].data == "dsp3.program.rom") {
+          has_dsp3 = true;
+          m.reader = {&DSP3::read, &dsp3};
+          m.writer = {&DSP3::write, &dsp3};
+          //some of the chips hardcode the Select value
+        }
+        if (node["name"].data == "dsp4.program.rom") {
+          has_dsp4 = true;
+          m.reader = {&DSP4::read, &dsp4};
+          m.writer = {&DSP4::write, &dsp4};
+        }
+      }
+      if (node.name == "map" && node["id"].data == "io") {
+        parse_markup_map(m, node);
+        select = numeral(node["select"].data);
+      }
+    }
+    if (selectaddr) *selectaddr=select;
+    mapping.append(m);
+  } else {
+    Mapping m({&ST0010::read, &st0010}, {&ST0010::write, &st0010});
+    for(auto& node : root) {
+      if(node.name != "map") continue;
+
+      parse_markup_map(m, node);
+      mapping.append(m);
+    }
   }
 }
 
diff -ru higan_v094-source/sfc/chip/chip.hpp bsneshle094/sfc/chip/chip.hpp
--- higan_v094-source/sfc/chip/chip.hpp	2013-01-21 07:09:43.000000000 +0100
+++ bsneshle094/sfc/chip/chip.hpp	2014-04-26 16:20:16.502065832 +0200
@@ -25,6 +25,14 @@
 #include <sfc/chip/hsu1/hsu1.hpp>
 #include <sfc/chip/msu1/msu1.hpp>
 
+#include <sfc/chip/dsp1/dsp1.hpp>
+#include <sfc/chip/dsp2/dsp2.hpp>
+#include <sfc/chip/dsp3/dsp3.hpp>
+#include <sfc/chip/dsp4/dsp4.hpp>
+
+#include <sfc/chip/cx4/cx4.hpp>
+#include <sfc/chip/st0010/st0010.hpp>
+
 void Coprocessor::step(unsigned clocks) {
   clock += clocks * (uint64)cpu.frequency;
 }
Only in bsneshle094/sfc/chip: cx4
Only in bsneshle094/sfc/chip: dsp1
Only in bsneshle094/sfc/chip: dsp2
Only in bsneshle094/sfc/chip: dsp3
Only in bsneshle094/sfc/chip: dsp4
Only in bsneshle094/sfc/chip: st0010
diff -ru higan_v094-source/sfc/interface/interface.cpp bsneshle094/sfc/interface/interface.cpp
--- higan_v094-source/sfc/interface/interface.cpp	2014-01-13 07:34:39.000000000 +0100
+++ bsneshle094/sfc/interface/interface.cpp	2014-05-03 11:42:51.186546797 +0200
@@ -94,8 +94,8 @@
   throw;
 }
 
-void Interface::load(unsigned id) {
-  if(id == ID::SuperFamicom) cartridge.load();
+void Interface::load(unsigned id, bool hlechips) {
+  if(id == ID::SuperFamicom) cartridge.load(hlechips);
   if(id == ID::SuperGameBoy) cartridge.load_super_game_boy();
   if(id == ID::Satellaview) cartridge.load_satellaview();
   if(id == ID::SufamiTurboSlotA) cartridge.load_sufami_turbo_a();
diff -ru higan_v094-source/sfc/interface/interface.hpp bsneshle094/sfc/interface/interface.hpp
--- higan_v094-source/sfc/interface/interface.hpp	2013-12-17 05:31:06.000000000 +0100
+++ bsneshle094/sfc/interface/interface.hpp	2014-05-03 11:42:58.918546942 +0200
@@ -96,7 +96,7 @@
   bool loaded();
   string sha256();
   unsigned group(unsigned id);
-  void load(unsigned id);
+  void load(unsigned id, bool hlechips);
   void save();
   void load(unsigned id, const stream& stream);
   void save(unsigned id, const stream& stream);
diff -ru higan_v094-source/sfc/Makefile bsneshle094/sfc/Makefile
--- higan_v094-source/sfc/Makefile	2013-01-23 00:07:55.000000000 +0100
+++ bsneshle094/sfc/Makefile	2014-04-26 16:20:16.502065832 +0200
@@ -9,6 +9,8 @@
 sfc_objects += sfc-spc7110 sfc-sdd1 sfc-obc1
 sfc_objects += sfc-hsu1 sfc-msu1
 sfc_objects += sfc-satellaviewcart sfc-sufamiturbo
+sfc_objects += sfc-hledsp1 sfc-hledsp2 sfc-hledsp3 sfc-hledsp4
+sfc_objects += sfc-hlecx4 sfc-hlest0010
 objects += $(sfc_objects)
 
 ifeq ($(profile),accuracy)
@@ -70,3 +72,11 @@
 
 obj/sfc-satellaviewcart.o: $(sfc)/slot/satellaview/satellaview.cpp $(call rwildcard,$(sfc)/slot/satellaview/)
 obj/sfc-sufamiturbo.o:     $(sfc)/slot/sufamiturbo/sufamiturbo.cpp $(call rwildcard,$(sfc)/slot/sufamiturbo/)
+
+obj/sfc-hledsp1.o:         $(sfc)/chip/dsp1/dsp1.cpp $(sfc)/chip/dsp1/*
+obj/sfc-hledsp2.o:         $(sfc)/chip/dsp2/dsp2.cpp $(sfc)/chip/dsp2/*
+obj/sfc-hledsp3.o:         $(sfc)/chip/dsp3/dsp3.cpp $(sfc)/chip/dsp3/*
+obj/sfc-hledsp4.o:         $(sfc)/chip/dsp4/dsp4.cpp $(sfc)/chip/dsp4/*
+
+obj/sfc-hlecx4.o:          $(sfc)/chip/cx4/cx4.cpp $(sfc)/chip/cx4/*
+obj/sfc-hlest0010.o:       $(sfc)/chip/st0010/st0010.cpp $(sfc)/chip/st0010/*
diff -ru higan_v094-source/sfc/memory/memory-inline.hpp bsneshle094/sfc/memory/memory-inline.hpp
--- higan_v094-source/sfc/memory/memory-inline.hpp	2014-01-13 07:27:34.000000000 +0100
+++ bsneshle094/sfc/memory/memory-inline.hpp	2014-04-26 16:20:16.502065832 +0200
@@ -73,14 +73,21 @@
   return base;
 }
 
-unsigned Bus::reduce(unsigned addr, unsigned mask) {
-  unsigned result = 0, length = 0;
-  for(unsigned n = 0; n < 24; n++) {
-    unsigned bit = 1 << n;
-    if(mask & bit) continue;
-    result |= (bool)(addr & bit) << length++;
-  }
-  return result;
+unsigned Bus::reduce(unsigned addr, unsigned mask)
+{
+	while (mask)
+	{
+		//extract the bits to keep
+		//set everything below the lowest set bit; 0x018000 -> 0x007FFF
+		unsigned tmp=((mask-1)&(~mask));
+		
+		//shift everything above that
+		addr=(addr&tmp)|((addr>>1)&~tmp);
+		
+		//adjust the mask
+		mask=(mask&(mask-1))>>1;
+	}
+	return addr;
 }
 
 uint8 Bus::read(unsigned addr) {
diff -ru higan_v094-source/sfc/system/serialization.cpp bsneshle094/sfc/system/serialization.cpp
--- higan_v094-source/sfc/system/serialization.cpp	2013-05-05 09:48:32.000000000 +0200
+++ bsneshle094/sfc/system/serialization.cpp	2014-04-26 16:20:16.502065832 +0200
@@ -73,6 +73,10 @@
   if(cartridge.has_hsu1()) hsu1.serialize(s);
   if(cartridge.has_msu1()) msu1.serialize(s);
   if(cartridge.has_st_slots()) sufamiturboA.serialize(s), sufamiturboB.serialize(s);
+  if(cartridge.has_dsp1()) dsp1.serialize(s);
+  if(cartridge.has_dsp2()) dsp2.serialize(s);
+  //if(cartridge.has_dsp3()) dsp3.serialize(s);
+  //if(cartridge.has_dsp4()) dsp4.serialize(s);
 }
 
 //perform dry-run state save:
diff -ru higan_v094-source/sfc/system/system.cpp bsneshle094/sfc/system/system.cpp
--- higan_v094-source/sfc/system/system.cpp	2014-01-13 07:06:55.000000000 +0100
+++ bsneshle094/sfc/system/system.cpp	2014-04-26 16:20:16.502065832 +0200
@@ -82,6 +82,12 @@
   hsu1.init();
   msu1.init();
   satellaviewcartridge.init();
+  dsp1.init();
+  dsp2.init();
+  dsp3.init();
+  dsp4.init();
+  cx4.init();
+  st0010.init();
 
   video.init();
   audio.init();
@@ -94,6 +100,9 @@
 }
 
 void System::load() {
+#ifdef __LIBRETRO__
+  interface->loadRequest(ID::IPLROM, "");
+#else
   string manifest = string::read({interface->path(ID::System), "manifest.bml"});
   auto document = Markup::Document(manifest);
 
@@ -101,6 +110,7 @@
   if(!file::exists({interface->path(ID::System), document["system/smp/rom/name"].data})) {
     interface->notify("Error: required Super Famicom firmware ipl.rom not found.\n");
   }
+#endif
 
   region = configuration.region;
   expansion = configuration.expansion_port;
@@ -138,6 +148,12 @@
   if(cartridge.has_msu1()) msu1.load();
   if(cartridge.has_bs_slot()) satellaviewcartridge.load();
   if(cartridge.has_st_slots()) sufamiturboA.load(), sufamiturboB.load();
+  if(cartridge.has_dsp1()) dsp1.load();
+  if(cartridge.has_dsp2()) dsp2.load();
+  if(cartridge.has_dsp3()) dsp3.load();
+  if(cartridge.has_dsp4()) dsp4.load();
+  if(cartridge.has_cx4()) cx4.load();
+  if(cartridge.has_st0010()) st0010.load();
 
   serialize_init();
 }
@@ -162,6 +178,12 @@
   if(cartridge.has_msu1()) msu1.unload();
   if(cartridge.has_bs_slot()) satellaviewcartridge.unload();
   if(cartridge.has_st_slots()) sufamiturboA.unload(), sufamiturboB.unload();
+  if(cartridge.has_dsp1()) dsp1.unload();
+  if(cartridge.has_dsp2()) dsp2.unload();
+  if(cartridge.has_dsp3()) dsp3.unload();
+  if(cartridge.has_dsp4()) dsp4.unload();
+  if(cartridge.has_cx4()) cx4.unload();
+  if(cartridge.has_st0010()) st0010.unload();
 }
 
 void System::power() {
@@ -190,6 +212,12 @@
   if(cartridge.has_hsu1()) hsu1.power();
   if(cartridge.has_msu1()) msu1.power();
   if(cartridge.has_bs_slot()) satellaviewcartridge.power();
+  if(cartridge.has_dsp1()) dsp1.power();
+  if(cartridge.has_dsp2()) dsp2.power();
+  if(cartridge.has_dsp3()) dsp3.power();
+  if(cartridge.has_dsp4()) dsp4.power();
+  if(cartridge.has_cx4()) cx4.power();
+  if(cartridge.has_st0010()) st0010.power();
 
   reset();
 }
@@ -231,6 +259,13 @@
   if(cartridge.has_spc7110()) cpu.coprocessors.append(&spc7110);
   if(cartridge.has_msu1()) cpu.coprocessors.append(&msu1);
 
+  if(cartridge.has_dsp1()) dsp1.reset();
+  if(cartridge.has_dsp2()) dsp2.reset();
+  if(cartridge.has_dsp3()) dsp3.reset();
+  if(cartridge.has_dsp4()) dsp4.reset();
+  if(cartridge.has_cx4()) cx4.reset();
+  if(cartridge.has_st0010()) st0010.reset();
+
   scheduler.init();
   input.connect(0, configuration.controller_port1);
   input.connect(1, configuration.controller_port2);
Only in bsneshle094/: target-libretro
